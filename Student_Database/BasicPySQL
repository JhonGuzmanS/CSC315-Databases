import mysql.connector
import easygui as gui
import pandas as pd


def login(user, passwd=None, db=None):
    database = mysql.connector.connect(
        host="localhost",
        user=user,
        passwd=passwd,
        database=db
    )
    return database


def getUser():
    user = input("Enter in your username: ")
    passwd = input("Enter your password(None): ")
    if passwd == "None":
        passwd = None
    return user, passwd


def print_cursor(mycursor):
    index = ['ID', 'First', 'Last', 'Year', 'Address', 'Grade']
    df = pd.DataFrame(columns=index)
    for x in mycursor:
        df.loc[len(df)] = x
    gui.msgbox(df)


def findStudent():
    title = "Find Student"
    selectname = "SELECT * FROM students WHERE sfirst = %s AND slast = %s;"
    choice = gui.choicebox("Choose how to find Student:", title, choices=["ID", "Name"])
    if choice == "ID":
        id = gui.enterbox("Enter in the ID of the student", title)
        if type(int(id)) != int:
            gui.msgbox("Invalid information.", title, "Continue")
            findStudent()
        else:
            try:
                mycursor.execute("SELECT * FROM students WHERE sid = %(value)s", {'value': id})
                print_cursor(mycursor)
                menu()
            except:
                gui.msgbox("Invalid information.", title, "Continue")
                findStudent()
    elif choice == "Name":
        fieldName = ["First Name", "Last Name"]
        name = gui.multenterbox("Enter in the correct information", title, fieldName)
        try:
            mycursor.execute(selectname, name)
            print_cursor(mycursor)
            menu()
        except:
            gui.msgbox("Invalid information.", title, "Continue")
            findStudent()


def orderStudents():
    title = "Order Students"
    choice = gui.choicebox("Which category do you want to order by?", title, choices=["Name", "Year", "ID", "Grade"])
    order = gui.choicebox("Ascending order or Descending order?", title, choices=["Ascend", "Descend"])
    if order == 'Ascend':
        order = 'ASC'
    elif order == 'Descend':
        order = 'DESC'

    if choice == 'Name':
        choice = gui.choicebox("Order by first or last name?", title, choices=["First", "Last"])
        if choice == 'First':
            try:
                mycursor = db.cursor()
                mycursor.execute("SELECT * FROM students order by sfirst %s" % order)
                print_cursor(mycursor)
                menu()
            except:
                gui.msgbox("Invalid information.", title, "Continue")
                orderStudents()
        if choice == 'Last':
            try:
                mycursor = db.cursor()
                mycursor.execute("SELECT * FROM students order by slast %s" % order)
                print_cursor(mycursor)
                menu()
            except:
                gui.msgbox("Invalid information.", title, "Continue")
                orderStudents()
    elif choice == 'Year':
        try:
            mycursor = db.cursor()
            mycursor.execute("SELECT * FROM students order by syear %s" % order)
            print_cursor(mycursor)
            menu()
        except:
            gui.msgbox("Invalid information.", title, "Continue")
            orderStudents()
    elif choice == 'ID':
        try:
            mycursor = db.cursor()
            mycursor.execute("SELECT * FROM students order by sid %s" % order)
            print_cursor(mycursor)
            menu()
        except:
            gui.msgbox("Invalid information.", title, "Continue")
            orderStudents()
    elif choice == 'Grade':
        try:
            mycursor = db.cursor()
            mycursor.execute("SELECT * FROM students order by sgrade %s" % order)
            print_cursor(mycursor)
            menu()
        except:
            gui.msgbox("Invalid information.", title, "Continue")
            orderStudents()


def groupStudents():
    title = "Group Students"
    select = "select * from students where sgrade between %s and %s and ("
    select_year = "select * from students where "
    select_grade = "select * from students where sgrade between %s and %s"
    grouplist = ("Year", "Grade")
    choices = gui.multchoicebox("Choose all that apply:", title, choices=grouplist)
    if len(choices) == len(grouplist):
        year = gui.multchoicebox("Choose all that apply:", "Group Students", choices=('FRES', 'SOPH', 'JUN', 'SEN'))
        grade = gui.enterbox("Enter in a range for Grade. Ex: 0,100", title)
        grade = grade.split(',')
        num = len(year) - 1
        if num != 0:
            for i in range(num):
                select = select + "syear = %s or "
        select = select + "syear = %s) "
        values = grade + year
        try:
            mycursor.execute(select, values)
            print_cursor(mycursor)
            menu()
        except:
            gui.msgbox("Invalid information.", title, "Continue")
            groupStudents()

    elif choices[0] == 'Year':
        year = gui.multchoicebox("Choose all that apply:", "Group Students", choices=('FRES', 'SOPH', 'JUN', 'SEN'))
        num = len(year) - 1
        print(num)
        if num != 0:
            for i in range(num):
                select_year = select_year + "syear = %s or "
        select_year = select_year + "syear = %s "
        try:
            mycursor.execute(select_year, year)
            print_cursor(mycursor)
            menu()
        except:
            gui.msgbox("Invalid information.", title, "Continue")
            groupStudents()

    elif choices[0] == 'Grade':
        grade = gui.enterbox("Enter in a range for Grade. Ex: 0,100", title)
        grade = grade.split(',')
        try:
            mycursor.execute(select_grade, grade)
            print_cursor(mycursor)
            menu()
        except:
            gui.msgbox("Invalid information.", title, "Continue")
            groupStudents()


def insertStudent():
    insert = "INSERT INTO students (sfirst, slast, syear, saddress, sgrade) VALUES (%s, %s, %s, %s, %s);"
    msg = "Enter in Student Info"
    title = "Student Information"
    fieldName = ["First Name", "Last Name", "Year", "Address", "Current Grade"]
    info = gui.multenterbox(msg, title, fieldName)
    if info[0] == "" or info[1] == "" or info[2] == "" or info[3] == "" or info[4] == "":
        gui.msgbox("Information missing.", title, "Continue")
        insertStudent()
    else:
        try:
            mycursor.execute(insert, info)
            db.commit()
            gui.msgbox("Successfully added student.")
            menu()
        except:
            gui.msgbox("Invalid information.", title, "Continue")
            insertStudent()


def menu():
    title = "Main Menu"
    choices = ["Order Students", "Find a Student", "Add a Student", "Group Students", "Exit"]
    choice = gui.choicebox("Welcome [REDACTED], what would you like to do?", title, choices=choices)
    if choice == choices[0]:
        orderStudents()
    elif choice == choices[1]:
        findStudent()
    elif choice == choices[2]:
        insertStudent()
    elif choice == choices[3]:
        groupStudents()
    elif choice == choices[4]:
        gui.msgbox("Exiting Now...")


# start of program
is_connect = False
db = mysql.connector.connect()
while not is_connect:
    value = gui.multenterbox("Enter in your information", "Login", fields=["User", "Password"])
    if value is None:
        quit()
    try:
        db = login(value[0], value[1], db="studentinfo")
        is_connect = True
    except:
        gui.msgbox("Incorrect user/password.")

if is_connect:
    mycursor = db.cursor()
    menu()

db.close()
